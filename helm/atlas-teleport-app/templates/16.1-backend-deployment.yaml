apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: {{ .Values.nginxAppName }}
  name: {{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}-backend
  namespace: {{ template "teleport.namespace" . }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.nginxAppName }}
      component: default-backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.nginxAppName }}
        component: default-backend
    spec:
      containers:
      - image: "{{ .Values.image.backend.repository }}:{{ .Values.image.backend.tag }}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name:  {{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}-backend
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          runAsUser: 65534
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}-backend
      serviceAccountName: {{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}-backend
      terminationGracePeriodSeconds: 60
