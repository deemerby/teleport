{{- if .Values.enabled.ingress -}}
{{- $ns := include "teleport.namespace" . -}}
{{- $appName := include "teleport.name" . -}}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $appName }}-deeplink
  namespace: {{ $ns }}
  annotations:
    kubernetes.io/ingress.class: {{ tpl (.Values.host.csp.ingressClass) . }}
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/limit-rps: "50"
    nginx.ingress.kubernetes.io/rewrite-target: {{ tpl .Values.ingress.deeplink.rewrite . }}
spec:
  rules:
  - http:
      paths:
      - path: {{ .Values.ingress.deeplink.path }}
        backend:
          serviceName: {{ $appName }}-external
          servicePort: proxyweb
    host: {{ tpl (.Values.host.csp.domain) . }}
  tls:
  - secretName: {{ tpl .Values.proxy.tls.secretName . }}
    hosts:
    - {{ tpl (.Values.host.csp.domain) . }}

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $appName }}-proxy-https
  namespace: {{ $ns }}
  annotations:
    kubernetes.io/ingress.class: {{ tpl (.Values.host.httpsProxy.ingressClass) . }}
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/limit-rps: "50"
    nginx.ingress.kubernetes.io/server-snippet: |
{{- range $key, $val := .Values.ingress.proxy.files }}
{{ $val | indent 6 }}
{{- end }}
spec:
  rules:
  - http:
      paths:
      - path: /(.*)
        backend:
          serviceName: {{ $appName }}-external
          servicePort: proxyweb
    host: {{ tpl (.Values.host.httpsProxy.domain) . }}
  tls:
  - secretName: {{ tpl .Values.proxy.tls.secretName . }}
    hosts:
    - {{ tpl (.Values.host.httpsProxy.domain) . }}

{{- end -}}
