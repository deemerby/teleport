apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: {{ .Values.nginxAppName }}
  name: {{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}
  namespace: {{ template "teleport.namespace" . }}
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.nginxAppName }}
      component: controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.nginxAppName }}
        component: controller
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --default-backend-service={{ template "teleport.namespace" . }}/{{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}-backend
        - --publish-service={{ template "teleport.namespace" . }}/{{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}
        - --election-id=ingress-controller-leader
        - --ingress-class={{ template "teleport.namespace" . }}
        - --configmap={{ template "teleport.namespace" . }}/{{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}
        - --default-ssl-certificate={{ template "teleport.namespace" . }}/{{ .Values.tls.nginx.secretName }}
        - --watch-namespace={{ template "teleport.namespace" . }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.image.nginx.repository }}:{{ .Values.image.nginx.tag }}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: {{ .Values.nginxAppName }}-controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 3129
          name: httpsp
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/certs
          name: {{ .Values.tls.nginx.secretName }}
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 33
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      volumes:
      - name: {{ .Values.tls.nginx.secretName }}
        secret:
          secretName: {{ .Values.tls.nginx.secretName }}
      serviceAccount: {{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}
      serviceAccountName: {{ template "teleport.namespace" . }}-{{ .Values.nginxAppName }}
      terminationGracePeriodSeconds: 60
